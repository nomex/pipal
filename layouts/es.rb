#coding: ISO-8859-1
# the UK pound sign breaks some editors so just specifying it
# as a char code rather than the symbol

# A description of the file, used in verbose mode
$layout_description = "ES keyboard layout"

$layout = {
				"º" => { # The character !
					0 => "ª\\", # is on the same key as 1
					1 => "1!|" # and is just one key away from 2, " and q
					# 2 => "3wa" + gbp # If you wanted to add keys two characters away you could with this line
				},
				"\\" => { 0 => "ºª", 1 => "1!|"},
				"ª" => { 0 => "º\\", 1 => "1!|"},
				"1" => { 0 => "!|", 1 => "ºª\\2\"@q"},
				"!" => { 0 => "1|", 1 => "ºª\\2\"@q"},
				"|" => { 0 => "1!", 1 => "ºª\\2\"@q"},
				"2" => { 0 => "\"@", 1 => "1!|qw3·#"},
				"\"" => { 0 => "2@", 1 => "1!|qw3·#"},
				"@" => { 0 => "2\"", 1 => "1!|qw3·#"},
				"3" => { 0 => "·#", 1 => "2\"@we€4$~"},
				"·" => { 0 => "3#", 1 => "2\"@we€4$~"},
				"#" => { 0 => "3·", 1 => "2\"@we€4$~"},
				"4" => { 0 => "$~", 1 => "3·#e€r5%"},
				"$" => { 0 => "4~", 1 => "3·#e€r5%"},
				"~" => { 0 => "4$", 1 => "3·#e€r5%"},
				"5" => { 0 => "%", 1 => "4$~rt6&¬"},
				"%" => { 0 => "5", 1 => "4$~rt6&¬"},
				"6" => { 0 => "&¬", 1 => "5%ty7/"},
				"&" => { 0 => "6¬", 1 => "5%ty7/"},
				"¬" => { 0 => "6&", 1 => "5%ty7/"},
				"7" => { 0 => "/", 1 => "6&¬yu8("},
				"/" => { 0 => "7", 1 => "6&¬yu8("},
				"8" => { 0 => "(", 1 => "7/ui9)"},
				"(" => { 0 => "8", 1 => "7/ui9)"},
				"9" => { 0 => ")", 1 => "8(io0="},
				")" => { 0 => "9", 1 => "8(io0="},
				"0" => { 0 => "=", 1 => "9)op'?"},
				"=" => { 0 => "0", 1 => "9)op'?"},
				"'" => { 0 => "?", 1 => "0=p`^¡¿"},
				"?" => { 0 => "'", 1 => "0=p`^¡¿"},
				"¡" => { 0 => "¿", 1 => "'?`^+*]"},
				"¿" => { 0 => "¡", 1 => "'?`^+*]"},
				"q" => { 1 => "1!|2\"@wsa"},
				"w" => { 1 => "q2\"@3·#e€dsa"},
				"e" => { 0 => "€", 1 => "w3·#4$~rfds"},
				"r" => { 1 => "e4$~5%tgfd"},
				"t" => { 1 => "r5%6&¬ygf"},
				"y" => { 1 => "t6&¬7/uhg"},
				"u" => { 1 => "y7/8(ijh"},
				"i" => { 1 => "u8(9)okj"},
				"o" => { 1 => "i9)0=plk"},
				"p" => { 1 => "o0='?`^[ñl"},
				"`" => { 0 => "^[", 1 => "p'?¡¿+*]'{ñ"},
				"^" => { 0 => "`[", 1 => "p'?¡¿+*]'{ñ"},
				"[" => { 0 => "`^", 1 => "p'?¡¿+*]'{ñ"},
				"+" => { 0 => "*]", 1 => "`^[¡¿ç}'{"},
				"*" => { 0 => "+]", 1 => "`^[¡¿ç}'{"},
				"]" => { 0 => "+*", 1 => "`^[¡¿ç}'{"},
				"a" => { 1 => "qwsz<>"},
				"s" => { 1 => "awedxz"},
				"d" => { 1 => "se€rfcx"},
				"f" => { 1 => "drtgvc"},
				"g" => { 1 => "ftyhbv"},
				"h" => { 1 => "gyujnb"},
				"j" => { 1 => "huikmn"},
				"k" => { 1 => "jiol,;m"},
				"l" => { 1 => "kopñ.:,;"},
				"ñ" => { 1 => "lp`^['{-_.:"},
				"{" => { 1 => "ñ`^+*]ç}-_"},
				"ç" => { 0 => "}", 1 => "+*]{"},
				"}" => { 0 => "ç", 1 => "+*]{"},
				"<" => { 0 => ">", 1 => "az"},
				">" => { 0 => "<", 1 => "az"},
				"z" => { 1 => "<>asx"},
				"x" => { 1 => "zsdc"},
				"c" => { 1 => "xdfv"},
				"v" => { 1 => "cfgb"},
				"b" => { 1 => "vghn"},
				"n" => { 1 => "bhjm"},
				"m" => { 1 => "njk,;"},
				"," => { 0 => ";", 1 => "mkl.:"},
				";" => { 0 => ",", 1 => "mkl.:"},
				"." => { 0 => ":", 1 => ",;lñ-_"},
				":" => { 0 => ".", 1 => ",;lñ-_"},
				"-" => { 0 => "_", 1 => ".:ñ{"},
				"_" => { 0 => "-", 1 => ".:ñ{"},

			}

# This is the furthest distance we are looking for as a jump + 1
# This could be calculated by the app when it starts up but that 
# seems like unnecessary work as you already know it when creating
# this file.
#
# You could also chose to penalise keys further away more by giving
# them a higher score.
MAX_SCORE = 2
